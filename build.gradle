// build.gradle for the overcast project

version = '2.1.0'
//version = '2.0.0' // Last released version

group = 'com.xebialabs.cloud'

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'

    apply plugin: 'idea'
    apply plugin: 'eclipse'
}

apply plugin: 'signing'

dependencies {
    compile 'com.amazonaws:aws-java-sdk:1.3.30'

    compile 'commons-io:commons-io:2.4'
    compile 'com.google.guava:guava:10.0.1'
    compile 'net.schmizz:sshj:0.7.0'
    compile 'com.xebialabs.overthere:overthere:2.4.3'
    compile 'org.slf4j:slf4j-api:1.7.2'

    compile 'org.libvirt:libvirt:0.5.1'
    // JNA version is pretty important only 3.3.0 seen working so far
    compile 'net.java.dev.jna:jna:3.3.0'
    compile 'org.jdom:jdom2:2.0.5'
    compile 'org.apache.httpcomponents:httpcore:4.2.1'
    compile 'org.apache.httpcomponents:httpclient:4.2.1'

    compile 'com.typesafe:config:1.2.1'

    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'junit:junit:4.10'
    testCompile 'org.mockito:mockito-core:1.9.0'

    testRuntime 'ch.qos.logback:logback-classic:1.0.9'
    testRuntime 'org.slf4j:jcl-over-slf4j:1.7.2'
    testRuntime 'org.slf4j:log4j-over-slf4j:1.7.2'
}

allprojects {
    configurations.all*.exclude group: 'commons-logging', module: 'commons-logging'

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    configurations {
        compile {
            transitive = false
        }
    }

    repositories {
        mavenCentral()
        maven {
            url 'http://download.java.net/maven/2/'
        }
        maven {
            url 'https://oss.sonatype.org/content/repositories/releases'
        }
        maven {
             url 'http://www.libvirt.org/maven2/'
        }
    }

    project.tasks.create("itest", Test).configure {
        description = "Run the integration tests."
        group = 'Test'
        includes = ["**/*Itest.*"]
        testResultsDir = project.file("${project.buildDir}/itest-results")
    }

    project.tasks.getByName("test").configure {
        excludes = ["**/*Itest.*", "**/*ItestSuite.*"]
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

signing {
    required { gradle.taskGraph.hasTask('uploadArchives') }
    sign configurations.archives
}

uploadArchives {
    if(project.hasProperty('sonatypeUsername')) {
        repositories.mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signPom(deployment) }

            configuration = configurations.archives

            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'Cloudtest'
                description 'A Java library to test against hosts in the cloud. '
                packaging 'jar'
                url 'https://github.com/xebialabs/overcast'
                inceptionYear '2012'

                scm {
                    url 'https://github.com/xebialabs/overcast'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'vpartington'
                        name 'Vincent Partington'
                        url 'http://www.xebialabs.com/'
                        email 'vpartington@xebialabs.com'
                        roles {
                            role 'Developer'
                        }
                    }
                    developer {
                        id 'hierynomus'
                        name 'Jeroen van Erp'
                        url 'http://www.xebialabs.com/'
                        email 'jvanerp@xebialabs.com'
                        roles {
                            role 'Developer'
                        }
                    }
                    developer {
                        id 'mkotsur'
                        name 'Mike Kotsur'
                        url 'http://www.xebialabs.com/'
                        email 'mkotsur@xebialabs.com'
                        roles {
                            role 'Developer'
                        }
                    }
                    developer {
                        id 'rklaren'
                        name 'Ric Klaren'
                        url 'http://www.xebialabs.com/'
                        email 'rklaren@xebialabs.com'
                        roles {
                            role 'Developer'
                        }
                    }
                }
            }
        }
    }
}
