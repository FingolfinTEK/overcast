value="foo"

some {
    nested {
        namespace {
            stringproperty = eulavemos
        }
    }
    nested.namespace.stringproperty = somevalue
    intprop : 42
    bar = ${value}
    boz = "${value}"
}

another.namespace {
    copiedValue = ${some.intprop}
    unixHome = ${?HOME}
    winHome : ""${?HOMEDRIVE}${?HOMEPATH}
}

unittestHost {
    someProp="someValue"
    vagrantDir="/httpd"
    home=""${?HOME}${?HOMEDRIVE}${?HOMEPATH}
}

# Example overcastLibVirtItestDhcpHost add this to a users overcast.properties
# to enable the itest.
#overcastLibVirtItestDhcpHost {
#    libvirtURL=qemu+ssh://user@server/system?socket=/var/run/libvirt/libvirt-sock
#    libvirtBaseDomain=base-ubuntu
#    networkDeviceId=br0
#    ipLookupStrategy=SSH
#    SSH {
#        url=ssh://user@dhcpserver?os=UNIX&connectionType=SFTP&privateKeyFile=/home/user/.ssh/id_rsa&passphrase=bigsecret
#        command=grep {0} /var/lib/misc/dnsmasq.leases | cut -d " " -f 3
#        timeout=30
#    }
#}

# Example overcastItestStaticIpHost add this to a users overcast.properties
#overcastItestStaticIpHost {
#    libvirtURL=qemu+ssh://user@server/system?socket=/var/run/libvirt/libvirt-sock
#    libvirtBaseDomain=base-ubuntu
#    networkDeviceId=br0
#    ipLookupStrategy=static
#    static {
#        ip = 10.10.10.8
#    }
#}
